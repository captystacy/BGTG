// <auto-generated />
using System;
using BGTG.Data;
using BGTG.POS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BGTG.POS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220203061413_DurationByTCPToolEntities")]
    partial class DurationByTCPToolEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.CalendarPlanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ConstructionDuration")
                        .HasColumnType("money");

                    b.Property<int>("ConstructionDurationCeiling")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConstructionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("CalendarPlans");
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.MainCalendarWorkEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalendarPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EstimateChapter")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalCostIncludingCAIW")
                        .HasColumnType("money");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CalendarPlanId");

                    b.ToTable("MainCalendarWorks");
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.MainConstructionMonthEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreationIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvestmentVolume")
                        .HasColumnType("money");

                    b.Property<Guid>("MainCalendarWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PercentPart")
                        .HasColumnType("money");

                    b.Property<decimal>("VolumeCAIW")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("MainCalendarWorkId");

                    b.ToTable("MainConstructionMonths");
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.PreparatoryCalendarWorkEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalendarPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EstimateChapter")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalCostIncludingCAIW")
                        .HasColumnType("money");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CalendarPlanId");

                    b.ToTable("PreparatoryCalendarWorks");
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.PreparatoryConstructionMonthEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreationIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvestmentVolume")
                        .HasColumnType("money");

                    b.Property<decimal>("PercentPart")
                        .HasColumnType("money");

                    b.Property<Guid>("PreparatoryCalendarWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("VolumeCAIW")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("PreparatoryCalendarWorkId");

                    b.ToTable("PreparatoryConstructionMonths");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByLCToolEntities.DurationByLCEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AcceptanceTime")
                        .HasColumnType("money");

                    b.Property<bool>("AcceptanceTimeIncluded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<decimal>("EstimateLaborCosts")
                        .HasColumnType("money");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<decimal>("NumberOfWorkingDays")
                        .HasColumnType("money");

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<decimal>("RoundedDuration")
                        .HasColumnType("money");

                    b.Property<bool>("RoundingIncluded")
                        .HasColumnType("bit");

                    b.Property<decimal>("Shift")
                        .HasColumnType("money");

                    b.Property<decimal>("TechnologicalLaborCosts")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDuration")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalLaborCosts")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("WorkingDayDuration")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("DurationByLCs");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.ExtrapolationDurationByTCPEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppendixKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("AppendixPage")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<int>("DurationCalculationType")
                        .HasColumnType("int");

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("PipelineDiameter")
                        .HasColumnType("int");

                    b.Property<string>("PipelineDiameterPresentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<string>("PipelineMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<decimal>("RoundedDuration")
                        .HasColumnType("money");

                    b.Property<decimal>("StandardChangePercent")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("VolumeChangePercent")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("ExtrapolationDurationByTCPs");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.ExtrapolationPipelineStandardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<Guid>("ExtrapolationDurationByTCPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ExtrapolationDurationByTCPId");

                    b.ToTable("ExtrapolationPipelineStandards");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.InterpolationDurationByTCPEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppendixKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("AppendixPage")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<int>("DurationCalculationType")
                        .HasColumnType("int");

                    b.Property<decimal>("DurationChange")
                        .HasColumnType("money");

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("PipelineDiameter")
                        .HasColumnType("int");

                    b.Property<string>("PipelineDiameterPresentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<string>("PipelineMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<decimal>("RoundedDuration")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("VolumeChange")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("InterpolationDurationByTCPs");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.InterpolationPipelineStandardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<Guid>("InterpolationDurationByTCPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("InterpolationDurationByTCPId");

                    b.ToTable("InterpolationPipelineStandards");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.StepwiseExtrapolationDurationByTCPEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppendixKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("AppendixPage")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<int>("DurationCalculationType")
                        .HasColumnType("int");

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("PipelineDiameter")
                        .HasColumnType("int");

                    b.Property<string>("PipelineDiameterPresentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<string>("PipelineMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<decimal>("RoundedDuration")
                        .HasColumnType("money");

                    b.Property<decimal>("StepwiseDuration")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("StepwiseExtrapolationDurationByTCPs");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.StepwiseExtrapolationPipelineStandardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<Guid>("StepwiseExtrapolationDurationByTCPId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StepwiseExtrapolationDurationByTCPId");

                    b.ToTable("StepwiseExtrapolationPipelineStandards");
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.StepwisePipelineStandardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Duration")
                        .HasColumnType("money");

                    b.Property<decimal>("PipelineLength")
                        .HasColumnType("money");

                    b.Property<decimal>("PreparatoryPeriod")
                        .HasColumnType("money");

                    b.Property<Guid>("StepwiseExtrapolationDurationByTCPId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StepwiseExtrapolationDurationByTCPId")
                        .IsUnique();

                    b.ToTable("StepwisePipelineStandards");
                });

            modelBuilder.Entity("BGTG.POS.Entities.EnergyAndWaterToolEntities.EnergyAndWaterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompressedAir")
                        .HasColumnType("money");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Energy")
                        .HasColumnType("money");

                    b.Property<string>("ObjectCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal>("Oxygen")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("VolumeCAIW")
                        .HasColumnType("money");

                    b.Property<decimal>("Water")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("EnergyAndWaters");
                });

            modelBuilder.Entity("BGTG.POS.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Logger")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("ThreadId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Microsoft.EntityFrameworkCore.AutoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Changed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("AutoHistory");
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.MainCalendarWorkEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.CalendarPlanToolEntities.CalendarPlanEntity", "CalendarPlan")
                        .WithMany("MainCalendarWorks")
                        .HasForeignKey("CalendarPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.MainConstructionMonthEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.CalendarPlanToolEntities.MainCalendarWorkEntity", "MainCalendarWork")
                        .WithMany("ConstructionMonths")
                        .HasForeignKey("MainCalendarWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.PreparatoryCalendarWorkEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.CalendarPlanToolEntities.CalendarPlanEntity", "CalendarPlan")
                        .WithMany("PreparatoryCalendarWorks")
                        .HasForeignKey("CalendarPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.CalendarPlanToolEntities.PreparatoryConstructionMonthEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.CalendarPlanToolEntities.PreparatoryCalendarWorkEntity", "PreparatoryCalendarWork")
                        .WithMany("ConstructionMonths")
                        .HasForeignKey("PreparatoryCalendarWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.ExtrapolationPipelineStandardEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.DurationByTCPToolEntities.ExtrapolationDurationByTCPEntity", "ExtrapolationDurationByTCP")
                        .WithMany("CalculationPipelineStandards")
                        .HasForeignKey("ExtrapolationDurationByTCPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.InterpolationPipelineStandardEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.DurationByTCPToolEntities.InterpolationDurationByTCPEntity", "InterpolationDurationByTCP")
                        .WithMany("CalculationPipelineStandards")
                        .HasForeignKey("InterpolationDurationByTCPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.StepwiseExtrapolationPipelineStandardEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.DurationByTCPToolEntities.StepwiseExtrapolationDurationByTCPEntity", "StepwiseExtrapolationDurationByTCP")
                        .WithMany("CalculationPipelineStandards")
                        .HasForeignKey("StepwiseExtrapolationDurationByTCPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BGTG.POS.Entities.DurationByTCPToolEntities.StepwisePipelineStandardEntity", b =>
                {
                    b.HasOne("BGTG.POS.Entities.DurationByTCPToolEntities.StepwiseExtrapolationDurationByTCPEntity", "StepwiseExtrapolationDurationByTCP")
                        .WithOne("StepwisePipelineStandard")
                        .HasForeignKey("BGTG.POS.Entities.DurationByTCPToolEntities.StepwisePipelineStandardEntity", "StepwiseExtrapolationDurationByTCPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
